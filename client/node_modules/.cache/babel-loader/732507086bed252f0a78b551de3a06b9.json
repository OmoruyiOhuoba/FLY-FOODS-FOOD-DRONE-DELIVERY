{"ast":null,"code":"import _slicedToArray from\"/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import UserDashboardNavBar from\"./UserDashboardNavBar\";import{useSelector}from\"react-redux\";import axios from\"axios\";import StructureUser from\"./StructureUser\";import Pagination from\"react-js-pagination\";var UserDashboardReceived=function UserDashboardReceived(){var _useState=useState([\"\"]),_useState2=_slicedToArray(_useState,2),order=_useState2[0],setOrder=_useState2[1];/*pagination stuff*/var dataPerPage=20;var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),activePage=_useState4[0],setCurrentPage=_useState4[1];var indexOfLastData=activePage*dataPerPage;var indexOfFirstData=indexOfLastData-dataPerPage;var currentData=order.slice(indexOfFirstData,indexOfLastData);var handlePageChange=function handlePageChange(pageNumber){console.log(\"active page is \".concat(pageNumber));setCurrentPage(pageNumber);};var _useSelector=useSelector(function(state){return{auth:state.auth};}),auth=_useSelector.auth;useEffect(function(){axios.get(\"/api/cityrunner/userreceived/\".concat(auth.user.id)).then(function(res){setOrder(res.data);}).catch(function(error){console.log(error);});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(UserDashboardNavBar,{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"ontop-form ontop-form2 ontop-dash ontop-dash1\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Received\"}),\" Orders\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Order ID\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Item\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Pick-up Address\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Sender Name\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Sender Phone Number\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Sender E-mail\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Pick-up Date\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Order Charge\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Item Weight\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Item Quantity\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Recipient Address\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Recipient Name\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Recipient Phone Number\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Recipient E-mail\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Order Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:currentData.map(function(data,index){return/*#__PURE__*/_jsx(StructureUser,{id:data._id,pickupitem:data.pickupitem,pickupaddress:data.pickupaddress,name:data.name,phone:data.phone,email:data.email,pickupdate:data.pickupdate,amountInNaira:data.amountInNaira,weightinkg:data.weightinkg,pickupquantity:data.pickupquantity,deliveryaddress:data.deliveryaddress,deliveryname:data.deliveryname,deliveryphonenumber:data.deliveryphonenumber,deliveryemail:data.deliveryemail,status:data.status},index);})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"pagination\",children:/*#__PURE__*/_jsx(Pagination,{activePage:activePage,itemsCountPerPage:20,totalItemsCount:order.length,pageRangeDisplayed:5,onChange:handlePageChange})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]});};export default UserDashboardReceived;","map":{"version":3,"sources":["/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/components/Dashboard/UserDashboardReceived.jsx"],"names":["React","useState","useEffect","UserDashboardNavBar","useSelector","axios","StructureUser","Pagination","UserDashboardReceived","order","setOrder","dataPerPage","activePage","setCurrentPage","indexOfLastData","indexOfFirstData","currentData","slice","handlePageChange","pageNumber","console","log","state","auth","get","user","id","then","res","data","catch","error","map","index","_id","pickupitem","pickupaddress","name","phone","email","pickupdate","amountInNaira","weightinkg","pickupquantity","deliveryaddress","deliveryname","deliveryphonenumber","deliveryemail","status","length"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAA0C,OAA1C,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA,OAAQC,WAAR,KAA0B,aAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CAMA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,eACNP,QAAQ,CAAC,CAAC,EAAD,CAAD,CADF,wCACzBQ,KADyB,eAClBC,QADkB,eAGjC,oBACA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CAJiC,eAKMV,QAAQ,CAAE,CAAF,CALd,yCAKzBW,UALyB,eAKbC,cALa,eAOjC,GAAMC,CAAAA,eAAe,CAAGF,UAAU,CAAGD,WAArC,CACA,GAAMI,CAAAA,gBAAgB,CAAGD,eAAe,CAAGH,WAA3C,CACA,GAAMK,CAAAA,WAAW,CAAGP,KAAK,CAACQ,KAAN,CAAaF,gBAAb,CAA+BD,eAA/B,CAApB,CAEA,GAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAEC,UAAF,CAAkB,CACvCC,OAAO,CAACC,GAAR,0BAAgCF,UAAhC,GACAN,cAAc,CAAEM,UAAF,CAAd,CACF,CAHF,CAXiC,iBAmBff,WAAW,CAAE,SAAAkB,KAAK,QAAK,CACxCC,IAAI,CAAED,KAAK,CAACC,IAD4B,CAAL,EAAP,CAnBI,CAmBxBA,IAnBwB,cAmBxBA,IAnBwB,CAuBhCrB,SAAS,CAAC,UAAM,CAEZG,KAAK,CAACmB,GAAN,wCAA0CD,IAAI,CAACE,IAAL,CAAUC,EAApD,GACCC,IADD,CACM,SAACC,GAAD,CAAS,CACXlB,QAAQ,CAACkB,GAAG,CAACC,IAAL,CAAR,CACH,CAHD,EAGGC,KAHH,CAGS,SAAAC,KAAK,CAAG,CACbX,OAAO,CAACC,GAAR,CAAYU,KAAZ,EACH,CALD,EAQH,CAVQ,CAAT,CAaA,mBACI,oCACA,KAAC,mBAAD,IADA,cAEA,kCACA,WAAG,SAAS,CAAC,+CAAb,wBAA6D,+BAA7D,aADA,EAFA,cAKA,YAAK,SAAS,CAAC,OAAf,uBACQ,sCACI,oCACI,mCACI,gCADJ,cAII,4BAJJ,cAOI,uCAPJ,cAUI,mCAVJ,cAaI,2CAbJ,cAgBI,qCAhBJ,cAmBI,oCAnBJ,cAsBI,oCAtBJ,cAyBI,mCAzBJ,cA4BI,qCA5BJ,cA+BI,yCA/BJ,cAkCI,sCAlCJ,cAqCI,8CArCJ,cAwCI,wCAxCJ,cA2CI,oCA3CJ,GADJ,EADJ,cAkDI,uBACCf,WAAW,CAACgB,GAAZ,CAAgB,SAACH,IAAD,CAAOI,KAAP,CAAiB,CACzC,mBACI,KAAC,aAAD,EAEA,EAAE,CAAGJ,IAAI,CAACK,GAFV,CAGA,UAAU,CAAIL,IAAI,CAACM,UAHnB,CAIA,aAAa,CAAIN,IAAI,CAACO,aAJtB,CAKA,IAAI,CAAGP,IAAI,CAACQ,IALZ,CAMA,KAAK,CAAIR,IAAI,CAACS,KANd,CAOA,KAAK,CAAIT,IAAI,CAACU,KAPd,CAQA,UAAU,CAAIV,IAAI,CAACW,UARnB,CASA,aAAa,CAAGX,IAAI,CAACY,aATrB,CAUA,UAAU,CAAIZ,IAAI,CAACa,UAVnB,CAWA,cAAc,CAAIb,IAAI,CAACc,cAXvB,CAYA,eAAe,CAAId,IAAI,CAACe,eAZxB,CAaA,YAAY,CAAGf,IAAI,CAACgB,YAbpB,CAcA,mBAAmB,CAAIhB,IAAI,CAACiB,mBAd5B,CAeA,aAAa,CAAGjB,IAAI,CAACkB,aAfrB,CAgBA,MAAM,CAAIlB,IAAI,CAACmB,MAhBf,EACOf,KADP,CADJ,CAoBI,CArBI,CADD,EAlDJ,GADR,EALA,cAoFI,YAAK,SAAS,CAAE,YAAhB,uBACA,KAAC,UAAD,EACG,UAAU,CAAGrB,UADhB,CAEG,iBAAiB,CAAG,EAFvB,CAGG,eAAe,CAAGH,KAAK,CAACwC,MAH3B,CAIG,kBAAkB,CAAG,CAJxB,CAKG,QAAQ,CAAG/B,gBALd,EADA,EApFJ,cA6FC,aA7FD,cA8FC,aA9FD,cA+FC,aA/FD,GADJ,CAoGH,CAxID,CA0IA,cAAeV,CAAAA,qBAAf","sourcesContent":["import React, {useState, useEffect} from  \"react\";\nimport UserDashboardNavBar from \"./UserDashboardNavBar\";\nimport {useSelector} from \"react-redux\";\nimport axios from \"axios\";\nimport StructureUser from \"./StructureUser\";\nimport Pagination from \"react-js-pagination\";\n\n\n\n\n\nconst UserDashboardReceived = () => { \n    const [order, setOrder] = useState([\"\"]);\n\n   /*pagination stuff*/\n   const dataPerPage = 20;\n   const [ activePage, setCurrentPage ] = useState( 1 );\n\n   const indexOfLastData = activePage * dataPerPage; \n   const indexOfFirstData = indexOfLastData - dataPerPage;\n   const currentData = order.slice( indexOfFirstData, indexOfLastData );\n\n   const handlePageChange = ( pageNumber ) => {\n       console.log( `active page is ${ pageNumber }` );\n       setCurrentPage( pageNumber )\n    };\n\n\n\n\n    const { auth } = useSelector( state => ({\n    auth: state.auth,\n    })); \n\n    useEffect(() => {\n\n        axios.get(`/api/cityrunner/userreceived/${auth.user.id}`)\n        .then((res) => {\n            setOrder(res.data);\n        }).catch(error =>{\n            console.log(error);\n        })\n\n\n    });\n\n\n    return(\n        <div>\n        <UserDashboardNavBar /> \n        <div>\n        <p className=\"ontop-form ontop-form2 ontop-dash ontop-dash1\"><b>Received</b> Orders</p>\n        </div>\n        <div className=\"table\">\n                <table>\n                    <thead>\n                        <tr>\n                            <td>\n                            Order ID\n                            </td>\n                            <td>\n                            Item\n                            </td>\n                            <td>\n                            Pick-up Address\n                            </td>\n                            <td>\n                            Sender Name\n                            </td>\n                            <td>\n                            Sender Phone Number\n                            </td>\n                            <td>\n                            Sender E-mail\n                            </td>\n                            <td>\n                            Pick-up Date\n                            </td>\n                            <td>\n                            Order Charge\n                            </td>\n                            <td>\n                            Item Weight\n                            </td>\n                            <td>\n                            Item Quantity\n                            </td>\n                            <td>\n                            Recipient Address\n                            </td>\n                            <td>\n                            Recipient Name\n                            </td>\n                            <td>\n                            Recipient Phone Number\n                            </td>\n                            <td>\n                            Recipient E-mail\n                            </td>\n                            <td>\n                            Order Status\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {currentData.map((data, index) => {\n             return(\n                 <StructureUser \n                 key = {index}\n                 id= {data._id}\n                 pickupitem = {data.pickupitem}\n                 pickupaddress = {data.pickupaddress}\n                 name= {data.name}\n                 phone = {data.phone}\n                 email = {data.email}\n                 pickupdate = {data.pickupdate}\n                 amountInNaira= {data.amountInNaira}\n                 weightinkg = {data.weightinkg}\n                 pickupquantity = {data.pickupquantity}\n                 deliveryaddress = {data.deliveryaddress}\n                 deliveryname= {data.deliveryname}\n                 deliveryphonenumber = {data.deliveryphonenumber}\n                 deliveryemail ={data.deliveryemail}\n                 status = {data.status}\n                 \n                 />);\n                })}\n                    </tbody>\n                </table>\n\n            </div>\n\n            <div className= \"pagination\" >\n            <Pagination\n               activePage={ activePage }\n               itemsCountPerPage={ 20 }\n               totalItemsCount={ order.length }\n               pageRangeDisplayed={ 5 }\n               onChange={ handlePageChange }\n            />\n         </div>\n         <br/>\n         <br/>\n         <br/>\n\n        </div>\n    )\n}\n\nexport default UserDashboardReceived;"]},"metadata":{},"sourceType":"module"}