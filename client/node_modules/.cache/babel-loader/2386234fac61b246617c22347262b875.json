{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/components/Private-routes/PrivateRouteUser.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRouteUser = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => localStorage.getItem('jwtToken') ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 44\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/signinuser',\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 71\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n\n_c = PrivateRouteUser;\nexport default PrivateRouteUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRouteUser\");","map":{"version":3,"sources":["/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/components/Private-routes/PrivateRouteUser.jsx"],"names":["React","Route","Redirect","PrivateRouteUser","component","Component","rest","props","localStorage","getItem","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACrB,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAC1BC,YAAY,CAACC,OAAb,CAAqB,UAArB,iBAAmC,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,UAAnC,gBAA8D,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEG,MAAAA,QAAQ,EAAE,aAAZ;AAA2BC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAAlC;AAAd;AAAA;AAAA;AAAA;AAAA;AADlE;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMV,gB;AAMN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRouteUser = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('jwtToken') ? <Component {...props} /> : <Redirect to={{ pathname: '/signinuser', state: { from: props.location } }} />\n    )} />\n)\n\nexport default PrivateRouteUser;"]},"metadata":{},"sourceType":"module"}