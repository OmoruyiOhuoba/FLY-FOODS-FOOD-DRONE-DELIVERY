{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/components/Auth/ForgotPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport backArrow from \"../../assets/backarrow.svg\";\nimport Logo from \"../../assets/logo-2.png\";\nimport history from '../../history';\n\nconst ForgotPassword = () => {\n  _s();\n\n  const [emailErr, setEmailErr] = useState({});\n  const [userData, setUserData] = useState({\n    email: \"\",\n    errors: {}\n  });\n  const {\n    auth,\n    errors\n  } = useSelector(state => ({\n    auth: state.auth,\n    errors: state.errors\n  }));\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserData(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n    console.log(userData);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isValid = formValidation();\n\n    if (isValid) {\n      if (userData.email && userData.errors) {\n        dispatch(loginUser(userData));\n\n        if (errors.message === \"Request failed with status code 400\") {\n          setIncorrect(1000);\n        }\n\n        setEmailErr(\"\");\n      }\n    }\n\n    console.log(userData);\n  };\n\n  const formValidation = () => {\n    const emailErr = {};\n    let isValid = true;\n\n    if (typeof userData.email !== \"string\") {\n      emailErr.emailType = \"Enter a valid email address\";\n      isValid = false;\n    }\n\n    if (userData.email === \"\") {\n      emailErr.emailRequired = \"The email field is required\";\n      isValid = false;\n    }\n\n    setEmailErr(emailErr);\n    return isValid;\n  };\n\n  const showMe = () => {\n    if (incorrect === 1000) {\n      return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contactForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"myForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your email below. We will send a temporary password to your mail which you will use to access your account and set a new password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          value: userData.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"highlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-class\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), Object.keys(emailErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            textAlign: \"left\"\n          },\n          children: [\" \", emailErr[key], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 24\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonPosition\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"contact-button\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \" Sign In \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgotpassword\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 11\n  }, this);\n};\n\n_s(ForgotPassword, \"zRK8ZWflI1DMl4JJ3w2YLBm0bZ4=\", false, function () {\n  return [useSelector];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/components/Auth/ForgotPassword.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","loginUser","Link","Logo","history","ForgotPassword","emailErr","setEmailErr","userData","setUserData","email","errors","auth","state","handleChange","event","name","value","target","prevData","console","log","handleSubmit","preventDefault","isValid","formValidation","dispatch","message","setIncorrect","emailType","emailRequired","showMe","incorrect","Object","keys","map","key","color","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {loginUser} from \"../../actions/authActions\";\nimport {Link} from \"react-router-dom\";\nimport backArrow from \"../../assets/backarrow.svg\";\nimport Logo from \"../../assets/logo-2.png\";\nimport history from '../../history'; \n\n\n\nconst ForgotPassword = () => {\n    const [emailErr, setEmailErr] = useState({});\n\n    const [userData, setUserData] = useState({\n        email: \"\",\n        errors:{},\n    });\n\n\n    const { auth, errors } = useSelector(state => ({\n        auth: state.auth,\n        errors: state.errors,\n      })); \n\n\n    \n      const handleChange = (event) => {\n        const {name, value} =event.target;\n\n        setUserData(prevData => {\n            return {\n                ...prevData, [name]: value\n            }\n        });\n\n        console.log(userData);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const isValid = formValidation();\n\n\n        if(isValid){\n            if(userData.email && userData.errors){\n              dispatch(loginUser(userData));\n\n              if(errors.message===\"Request failed with status code 400\"){\n                setIncorrect(1000);\n            }\n    \n                setEmailErr(\"\");\n              \n            }\n\n\n\n        }\n\n\n\n        console.log(userData);\n\n \n\n\n\n    }\n\n    const formValidation = () => {\n        const emailErr = {};\n        let isValid = true;\n  \n        if( typeof userData.email !== \"string\"){\n            emailErr.emailType = \"Enter a valid email address\";\n            isValid = false;\n        }\n\n        if( userData.email === \"\"){\n            emailErr.emailRequired = \"The email field is required\";\n            isValid = false;\n        }\n        \n\n        setEmailErr(emailErr);\n        return isValid;\n\n\n    }\n\n    const showMe = () =>{\n        if(incorrect ===1000){\n            return true\n        }\n    }\n\n\n    return(\n          <div className=\"contactForm\">\n            <form id=\"myForm\">\n            <p>Please enter your email below. We will send a temporary password to your mail which you will use to access your account and set a new password</p>\n            <div class=\"input-group\">\n                <input type=\"email\" name=\"email\" onChange={handleChange} value={userData.email} required />\n                <span class=\"highlight\"></span>\n                <span class=\"bar\"></span>\n                <label className=\"label-class\">Email</label>\n            </div>\n            {Object.keys(emailErr).map((key)=> {\n                return <div style={{color: \"red\", textAlign: \"left\"}}> {emailErr[key]} </div>\n            })}\n\n            <br/>\n            <div className=\"buttonPosition\">\n                <button className=\"contact-button\" type=\"submit\" onClick={handleSubmit}> Sign In </button>\n\n                <br/>\n                <br/>\n                <p className=\"forgotpassword\">Forgot password?</p>\n              </div>\n            </form>\n        </div>\n    )\n\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}