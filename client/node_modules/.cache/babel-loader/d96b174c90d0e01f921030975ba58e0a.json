{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/components/Dashboard/UserDashboardPending.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport UserDashboardNavBar from \"./UserDashboardNavBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport Structure from \"./Structure\";\n\nconst UserDashboardPending = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [order, setOrder] = useState[\"\"];\n  useEffect(_s(() => {\n    _s();\n\n    const dispatch = useDispatch();\n    const {\n      auth,\n      errors\n    } = useSelector(state => ({\n      auth: state.auth,\n      errors: state.errors\n    }));\n    axios.get(`/api/cityrunner/${auth.user.id}`).then(res => {\n      setOrder(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, \"//cYUxATffwyH/gKSsL3KRI5fRM=\", false, function () {\n    return [useDispatch, useSelector];\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserDashboardNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ontop-form ontop-form2 ontop-dash ontop-dash1\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 70\n        }, this), \" Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gridContainer \",\n      children: totalpost.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(Structure, {\n          title: data.title,\n          body: data.body,\n          author: data.author,\n          img: data.img,\n          id: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(UserDashboardPending, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserDashboardPending;\nexport default UserDashboardPending;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDashboardPending\");","map":{"version":3,"sources":["/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/components/Dashboard/UserDashboardPending.jsx"],"names":["React","useState","useEffect","UserDashboardNavBar","useSelector","useDispatch","axios","Structure","UserDashboardPending","order","setOrder","dispatch","auth","errors","state","get","user","id","then","res","data","catch","error","console","log","totalpost","map","index","title","body","author","img"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAIA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAE,EAAF,CAAlC;AAEAC,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACZ,UAAMS,QAAQ,GAAGN,WAAW,EAA5B;AACA,UAAM;AAAEO,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmBT,WAAW,CAAEU,KAAK,KAAK;AAChDF,MAAAA,IAAI,EAAEE,KAAK,CAACF,IADoC;AAEhDC,MAAAA,MAAM,EAAEC,KAAK,CAACD;AAFkC,KAAL,CAAP,CAApC;AAOAP,IAAAA,KAAK,CAACS,GAAN,CAAW,mBAAkBH,IAAI,CAACI,IAAL,CAAUC,EAAG,EAA1C,EACCC,IADD,CACOC,GAAD,IAAS;AACXT,MAAAA,QAAQ,CAACS,GAAG,CAACC,IAAL,CAAR;AACH,KAHD,EAGGC,KAHH,CAGSC,KAAK,IAAG;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KALD;AAMH,GAfQ;AAAA,YACYjB,WADZ,EAEoBD,WAFpB;AAAA,KAAT;AAkBA,sBACI;AAAA,4BACA,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,6BACA;AAAG,QAAA,SAAS,EAAC,+CAAb;AAAA,gCAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,eAMA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACLqB,SAAS,CAACC,GAAV,CAAc,CAACN,IAAD,EAAOO,KAAP,KAAiB;AACrB,4BACI,QAAC,SAAD;AACA,UAAA,KAAK,EAAIP,IAAI,CAACQ,KADd;AAEA,UAAA,IAAI,EAAGR,IAAI,CAACS,IAFZ;AAGA,UAAA,MAAM,EAAIT,IAAI,CAACU,MAHf;AAIA,UAAA,GAAG,EAAGV,IAAI,CAACW,GAJX;AAMA,UAAA,EAAE,EAAGJ;AANL,WAKOA,KALP;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVP;AADK;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA5CD;;IAAMnB,oB;;KAAAA,oB;AA8CN,eAAeA,oBAAf","sourcesContent":["import React, {useState, useEffect} from  \"react\";\nimport UserDashboardNavBar from \"./UserDashboardNavBar\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport axios from \"axios\";\nimport Structure from \"./Structure\";\n\n\n\nconst UserDashboardPending = () => {\n    const [order, setOrder] = useState[(\"\")];\n\n    useEffect(() => {\n        const dispatch = useDispatch();\n        const { auth, errors } = useSelector( state => ({\n        auth: state.auth,\n        errors: state.errors,\n        })); \n\n\n\n        axios.get(`/api/cityrunner/${auth.user.id}`)\n        .then((res) => {\n            setOrder(res.data);\n        }).catch(error =>{\n            console.log(error);\n        })\n    });\n\n\n    return(\n        <div>\n        <UserDashboardNavBar /> \n        <div>\n        <p className=\"ontop-form ontop-form2 ontop-dash ontop-dash1\"><b>Pending</b> Orders</p>\n        </div>\n        \n        <div className=\"gridContainer \">\n  {totalpost.map((data, index) => {\n             return(\n                 <Structure \n                 title = {data.title}\n                 body ={data.body}\n                 author = {data.author}\n                 img ={data.img}\n                 key = {index}\n                 id= {index}\n                 />);\n         })}\n     </div>\n\n        </div>\n    )\n}\n\nexport default UserDashboardPending;"]},"metadata":{},"sourceType":"module"}