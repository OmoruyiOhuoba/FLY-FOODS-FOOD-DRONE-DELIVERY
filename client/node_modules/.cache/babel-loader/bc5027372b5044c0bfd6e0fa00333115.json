{"ast":null,"code":"import { SET_CURRENT_USER, USER_LOADING, GET_ERRORS } from \"./types\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport history from '../history';\nimport { useSelector, useDispatch } from \"react-redux\";\nexport const registerUser = userData => dispatch => {\n  axios.post(\"/api/cityrunner/register\", userData).then(() => {\n    console.log(\"success\");\n    history.push(\"/signinuser\");\n  }) // re-direct to login on successful register\n  .catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err\n  }));\n};\nexport const registerRider = userData => dispatch => {\n  axios.post(\"/api/cityrunner/register\", userData).then(() => {\n    console.log(\"success\");\n    history.push(\"/signinrider\");\n  }) // re-direct to login on successful register\n  .catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err\n  }));\n};\nexport const registerAdmin = userData => dispatch => {\n  axios.post(\"/api/cityrunner/register\", userData).then(() => {\n    console.log(\"success\");\n    history.push(\"/signinadmin\");\n  }) // re-direct to login on successful register\n  .catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err\n  }));\n}; // Login - get user token\n\nexport const loginUser = userData => dispatch => {\n  axios.post(\"/api/cityrunner/login\", userData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n    history.push(\"/userdashboardhome\");\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err\n  }));\n};\nexport const loginRider = userData => dispatch => {\n  axios.post(\"/api/cityrunner/login\", userData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n    history.push(\"/riderdashboardhome\");\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err\n  }));\n};\nexport const loginAdmin = userData => dispatch => {\n  axios.post(\"/api/cityrunner/login\", userData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n    history.push(\"/admindashboardhome\");\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err\n  }));\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  history.push(\"/\");\n};\nexport const logoutRider = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  history.push(\"/signinrider\");\n};\nexport const logoutAdmin = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  history.push(\"/signinadmin\");\n};","map":{"version":3,"sources":["/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/actions/authActions.js"],"names":["SET_CURRENT_USER","USER_LOADING","GET_ERRORS","axios","jwt_decode","setAuthToken","history","useSelector","useDispatch","registerUser","userData","dispatch","post","then","console","log","push","catch","err","type","payload","registerRider","registerAdmin","loginUser","res","token","data","localStorage","setItem","decoded","setCurrentUser","loginRider","loginAdmin","setUserLoading","logoutUser","removeItem","logoutRider","logoutAdmin"],"mappings":"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","sourcesContent":["import {SET_CURRENT_USER, USER_LOADING, GET_ERRORS} from \"./types\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport history from '../history';\nimport {useSelector, useDispatch} from \"react-redux\";\n\n\n\n\n\n\nexport const registerUser = (userData) => dispatch => {\n\n    axios.post(\"/api/cityrunner/register\", userData)\n      .then(() => {\n        console.log(\"success\");\n        history.push(\"/signinuser\");\n      }) // re-direct to login on successful register\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n \n  export const registerRider = (userData) => dispatch => {\n\n    axios.post(\"/api/cityrunner/register\", userData)\n      .then(() => {\n        console.log(\"success\");\n        history.push(\"/signinrider\");\n      }) // re-direct to login on successful register\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n\n  export const registerAdmin = (userData) => dispatch => {\n\n    axios.post(\"/api/cityrunner/register\", userData)\n      .then(() => {\n        console.log(\"success\");\n        history.push(\"/signinadmin\");\n      }) // re-direct to login on successful register\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n\n\n  // Login - get user token\n  export const loginUser = userData => dispatch => {\n    axios.post(\"/api/cityrunner/login\", userData)\n      .then(res => {\n        // Save to localStorage\n  // Set token to localStorage\n        const { token } = res.data;\n        localStorage.setItem(\"jwtToken\", token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n        history.push(\"/userdashboardhome\");\n              })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n\n  export const loginRider = userData => dispatch => {\n    axios.post(\"/api/cityrunner/login\", userData)\n      .then(res => {\n        // Save to localStorage\n  // Set token to localStorage\n        const { token } = res.data;\n        localStorage.setItem(\"jwtToken\", token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n        history.push(\"/riderdashboardhome\");\n             })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n\n  export const loginAdmin = userData => dispatch => {\n    axios.post(\"/api/cityrunner/login\", userData)\n      .then(res => {\n        // Save to localStorage\n  // Set token to localStorage\n        const { token } = res.data;\n        localStorage.setItem(\"jwtToken\", token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n        history.push(\"/admindashboardhome\");\n              })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n\nexport const setCurrentUser = decoded => {\n        return {\n            type: SET_CURRENT_USER,\n            payload: decoded\n        }\n    };\n\n export const setUserLoading = () => {\n        return {\n            type: USER_LOADING\n        };\n    };\n\nexport const logoutUser = () => dispatch => {\n        localStorage.removeItem(\"jwtToken\");\n        setAuthToken(false);\n        dispatch(setCurrentUser({}))\n        history.push(\"/\");\n        \n    };\n\nexport const logoutRider = () => dispatch => {\n        localStorage.removeItem(\"jwtToken\");\n        setAuthToken(false);\n        dispatch(setCurrentUser({}))\n        history.push(\"/signinrider\");\n        \n    };\n\nexport const logoutAdmin = () => dispatch => {\n        localStorage.removeItem(\"jwtToken\");\n        setAuthToken(false);\n        dispatch(setCurrentUser({}))\n        history.push(\"/signinadmin\");\n        \n    };\n\n\n"]},"metadata":{},"sourceType":"module"}