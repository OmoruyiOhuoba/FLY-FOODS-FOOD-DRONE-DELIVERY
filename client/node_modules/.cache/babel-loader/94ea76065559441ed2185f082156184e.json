{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/components/Dashboard/UserDashboardDeliveries.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport UserDashboardNavBar from \"./UserDashboardNavBar\";\nimport axios from \"axios\";\nimport StructureUser from \"./StructureUser\";\n\nconst UserDashboardDeliveries = () => {\n  _s();\n\n  const [order, setOrder] = useState([\"\"]);\n  const dispatch = useDispatch();\n  const {\n    auth,\n    errors\n  } = useSelector(state => ({\n    auth: state.auth,\n    errors: state.errors\n  }));\n  useEffect(() => {\n    axios.get(`/api/cityrunner/userdelivered/${auth.user.id}`).then(res => {\n      setOrder(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserDashboardNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ontop-form ontop-form2 ontop-dash ontop-dash1\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Deliveries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: order.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(StructureUser, {\n              id: data._id,\n              pickupitem: data.pickupitem,\n              pickupaddress: data.pickupaddress,\n              name: data.name,\n              phone: data.phone,\n              email: data.email,\n              pickupdate: data.pickupdate,\n              amountInNaira: data.amountInNaira,\n              weightinkg: data.weightinkg,\n              pickupquantity: data.pickupquantity,\n              deliveryaddress: data.deliveryaddress,\n              deliveryname: data.deliveryname,\n              deliveryphonenumber: data.deliveryphonenumber,\n              deliveryemail: data.deliveryemail,\n              status: data.status\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserDashboardDeliveries, \"6zsF3LxBl9tBBI+eWkCY+cUzfKk=\", true);\n\n_c = UserDashboardDeliveries;\nexport default UserDashboardDeliveries;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDashboardDeliveries\");","map":{"version":3,"sources":["/Users/omoruyiohuoba/Desktop/APPS/WEB DEVELOPMENT/CITY-RUNNER/client/src/components/Dashboard/UserDashboardDeliveries.jsx"],"names":["React","useState","useEffect","UserDashboardNavBar","axios","StructureUser","UserDashboardDeliveries","order","setOrder","dispatch","useDispatch","auth","errors","useSelector","state","get","user","id","then","res","data","catch","error","console","log","map","index","_id","pickupitem","pickupaddress","name","phone","email","pickupdate","amountInNaira","weightinkg","pickupquantity","deliveryaddress","deliveryname","deliveryphonenumber","deliveryemail","status"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,uBAAuB,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;AAEA,QAAMQ,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBC,WAAW,CAAEC,KAAK,KAAK;AAChDH,IAAAA,IAAI,EAAEG,KAAK,CAACH,IADoC;AAEhDC,IAAAA,MAAM,EAAEE,KAAK,CAACF;AAFkC,GAAL,CAAP,CAApC;AAKAV,EAAAA,SAAS,CAAC,MAAM;AAEZE,IAAAA,KAAK,CAACW,GAAN,CAAW,iCAAgCJ,IAAI,CAACK,IAAL,CAAUC,EAAG,EAAxD,EACCC,IADD,CACOC,GAAD,IAAS;AACXX,MAAAA,QAAQ,CAACW,GAAG,CAACC,IAAL,CAAR;AACH,KAHD,EAGGC,KAHH,CAGSC,KAAK,IAAG;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KALD;AAQH,GAVQ,CAAT;AAcA,sBACI;AAAA,4BACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACA;AAAG,QAAA,SAAS,EAAC,+CAAb;AAAA,+BAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7D;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAA,gCACI;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA,oBACCf,KAAK,CAACkB,GAAN,CAAU,CAACL,IAAD,EAAOM,KAAP,KAAiB;AACnC,gCACI,QAAC,aAAD;AAEA,cAAA,EAAE,EAAGN,IAAI,CAACO,GAFV;AAGA,cAAA,UAAU,EAAIP,IAAI,CAACQ,UAHnB;AAIA,cAAA,aAAa,EAAIR,IAAI,CAACS,aAJtB;AAKA,cAAA,IAAI,EAAGT,IAAI,CAACU,IALZ;AAMA,cAAA,KAAK,EAAIV,IAAI,CAACW,KANd;AAOA,cAAA,KAAK,EAAIX,IAAI,CAACY,KAPd;AAQA,cAAA,UAAU,EAAIZ,IAAI,CAACa,UARnB;AASA,cAAA,aAAa,EAAGb,IAAI,CAACc,aATrB;AAUA,cAAA,UAAU,EAAId,IAAI,CAACe,UAVnB;AAWA,cAAA,cAAc,EAAIf,IAAI,CAACgB,cAXvB;AAYA,cAAA,eAAe,EAAIhB,IAAI,CAACiB,eAZxB;AAaA,cAAA,YAAY,EAAGjB,IAAI,CAACkB,YAbpB;AAcA,cAAA,mBAAmB,EAAIlB,IAAI,CAACmB,mBAd5B;AAeA,cAAA,aAAa,EAAGnB,IAAI,CAACoB,aAfrB;AAgBA,cAAA,MAAM,EAAIpB,IAAI,CAACqB;AAhBf,eACOf,KADP;AAAA;AAAA;AAAA;AAAA,oBADJ;AAoBH,WArBW;AADD;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH,CAnED;;GAAMpB,uB;;KAAAA,uB;AAqEN,eAAeA,uBAAf","sourcesContent":["import React, {useState, useEffect} from  \"react\";\nimport UserDashboardNavBar from \"./UserDashboardNavBar\";\nimport axios from \"axios\";\nimport StructureUser from \"./StructureUser\";\n\n\nconst UserDashboardDeliveries = () => {\n    const [order, setOrder] = useState([\"\"]);\n\n    const dispatch = useDispatch();\n    const { auth, errors } = useSelector( state => ({\n    auth: state.auth,\n    errors: state.errors,\n    })); \n\n    useEffect(() => {\n      \n        axios.get(`/api/cityrunner/userdelivered/${auth.user.id}`)\n        .then((res) => {\n            setOrder(res.data);\n        }).catch(error =>{\n            console.log(error);\n        })\n\n   \n    });\n\n\n\n    return(\n        <div>\n            <UserDashboardNavBar />\n            <div>\n            <p className=\"ontop-form ontop-form2 ontop-dash ontop-dash1\"><b>Deliveries</b></p>\n\n            </div>\n            <div className=\"table\">\n                <table>\n                    <thead>\n                        <tr>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {order.map((data, index) => {\n             return(\n                 <StructureUser \n                 key = {index}\n                 id= {data._id}\n                 pickupitem = {data.pickupitem}\n                 pickupaddress = {data.pickupaddress}\n                 name= {data.name}\n                 phone = {data.phone}\n                 email = {data.email}\n                 pickupdate = {data.pickupdate}\n                 amountInNaira= {data.amountInNaira}\n                 weightinkg = {data.weightinkg}\n                 pickupquantity = {data.pickupquantity}\n                 deliveryaddress = {data.deliveryaddress}\n                 deliveryname= {data.deliveryname}\n                 deliveryphonenumber = {data.deliveryphonenumber}\n                 deliveryemail ={data.deliveryemail}\n                 status = {data.status}\n                 \n                 />);\n         })}\n                    </tbody>\n                </table>\n\n            </div>\n \n        </div>\n    )\n}\n\nexport default UserDashboardDeliveries;"]},"metadata":{},"sourceType":"module"}